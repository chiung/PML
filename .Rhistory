library('caret')
library('randomForest')
library('e1071')
library('RANN')
training_org<-read.csv(file="C:\\Users\\peyter\\Documents\\R ML Assignment\\pml-training.csv",na.strings=c("", "NA", "NULL"))
testing_org<-read.csv(file="C:\\Users\\peyter\\Documents\\R ML Assignment\\pml-testing.csv",na.strings=c("", "NA", "NULL"))
trainingNApp<- training_org[ , colSums(is.na(training_org)) == 0]
filter1 = c('X', 'user_name', 'raw_timestamp_part_1', 'raw_timestamp_part_2', 'cvtd_timestamp', 'new_window', 'num_window')
training_filter <- trainingNApp[, -which(names(trainingNApp) %in% filter1)]
zeroVar= nearZeroVar(training_filter[sapply(training_filter, is.numeric)], saveMetrics = TRUE)
training.nonzerovar = training_filter[,zeroVar[, 'nzv']==0]
corrMatrix <- cor(na.omit(training.nonzerovar[sapply(training.nonzerovar, is.numeric)]))
dim(corrMatrix)
removecor = findCorrelation(corrMatrix, cutoff = .90, verbose = TRUE)
training.decor = training.nonzerovar[,-removecor]
inTrain <- createDataPartition(y=training.decor$classe, p=0.7, list=FALSE)
training <- training.decor[inTrain,]
testing <- training.decor[-inTrain,]
gbm_model1<-train(classe ~ ., method="gbm", data=training)
gbm_predict1 <- predict(gbm_model1,newdata=testing)
confusionMatrix(gbm_predict1, testing$classe)
gbm_predict2<-predict(gbm_model1,newdata=testing_org)
confusionMatrix(gbm_predict2, testing_org$classe)
View(testing_org)
confusionMatrix(gbm_predict1, testing$classe)
gbm_predict2<-predict(gbm_model1,newdata=testing_org)
confusionMatrix(gbm_predict2, testing_org$classe)
gbm_predict2[1]
confusionMatrix(gbm_predict2, training_org)
gbm_predict2[20]
gbm_predict2<-predict(gbm_model1, newdata=training_org)
View(training.decor)
testingNApp<- testing_org[ , colSums(is.na(testing_org)) == 0]
testing_filter <- testingNApp[, -which(names(testingNApp) %in% filter1)]
zeroVartest= nearZeroVar(testing_filter[sapply(testing_filter, is.numeric)], saveMetrics = TRUE)
testing.nonzerovar = testing_filter[,zeroVar[, 'nzv']==0]
corrMatrixtest <- cor(na.omit(testing.nonzerovar[sapply(testing.nonzerovar, is.numeric)]))
dim(corrMatrixtest)
removecortest = findCorrelation(corrMatrixtest, cutoff = .90, verbose = TRUE)
testing.decor = testing.nonzerovar[,-removecor]
View(testing.decor)
gbm_predict2<-predict(gbm_model1, newdata=trainin.decor)
gbm_predict2<-predict(gbm_model1, newdata=training.decor)
gbm_predict2[1]
gbm_predict2<-predict(gbm_model1, newdata=testing.decor)
gbm_predict2[1]
gbm_predict2[20]
gbm_predict2<-predict(gbm_model1, newdata=testing.decor)
gbm_predict2[15]
confusionMatrix(gbm_predict2, training.deco$classe)
confusionMatrix(gbm_predict2, training.decor$classe)
confusionMatrix(gbm_predict2, training.decor$classe)
confusionMatrix(gbm_predict2, testing.decor$classe)
testing.decor2<-testing.decor
View(testing.decor2)
testing.decor2[46]<-"classe"
View(testing.decor2)
testing.decor2[46]<-0
View(testing.decor2)
names(testing.decor2)[names(testing.decor2)=="problem_id"] <- "classe"
View(testing.decor2)
confusionMatrix(gbm_predict2, testing.decor$classe)
confusionMatrix(gbm_predict2, testing.decor2$classe)
level(gbm_predict2)
gbm_predict2<-predict(gbm_model1, newdata=testing.decor)
gbm_predict2
confusionMatrix(gbm_predict1, testing$classe)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
predMatrix = with(testing.decor,table(gbm_redict2,classe))
predMatrix = with(testing.decor,table(gbm_predict2,classe))
pml_write_files(gbm_predict2)
View(testing.decor2)
confusionMatrix(gbm_predict2, testing.decor$problem_id)
confusionMatrix(gbm_predict2, testing.decor2$classe)
str(testing.decor2)
str(training.decor)
testing.decor2$classe <- factor(testing.decor2$classe)
confusionMatrix(gbm_predict2, testing.decor2$classe)
str(testing.decor2)
confusionMatrix(gbm_predict2, testing.decor2$classe)
View(testing.decor2)
confusionMatrix(gbm_predict2, testing.decor$classe)
View(testing.decor)
str(testing.decor)
rm(testing.decor2
)
testing.decor2<-testing.decor
testing.decor2$problem_id<- factor(testing.decor2$problem_id)
confusionMatrix(gbm_predict2, testing.decor2$problem_id)
str(testing.decor2)
confusionMatrix(gbm_predict1, testing$classe)
```{r message=FALSE, warning=FALSE, eval=FALSE}
